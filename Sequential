import java.io.IOException;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapreduce.*;
import org.apache.hadoop.mapreduce.lib.input.*;
import org.apache.hadoop.mapreduce.lib.output.*;

public class wc

{
   public static class Map extends Mapper<Text, Text, Text, Text>
   {
       public void map(Text key, Text value, Context context) throws IOException, InterruptedException
       {
           
               context.write(key,value);
       }
   }

   public static void main(String[] args) throws Exception
   {
       Configuration conf = new Configuration();
       Job job = new Job(conf, "ww");
       job.setJarByClass(wc.class);
       job.setOutputKeyClass(Text.class);
       job.setOutputValueClass(Text.class);
       job.setMapperClass(Map.class);
       //job.setReducerClass(Reduce.class);
       job.setNumReduceTasks(0);
       job.setInputFormatClass(KeyValueTextInputFormat.class);
       job.setOutputFormatClass(SequenceFileOutputFormat.class);
       FileInputFormat.addInputPath(job, new Path(args[0]));
       FileOutputFormat.setOutputPath(job, new Path(args[1]));
       job.waitForCompletion(true);
   }
}

To read file:
Mapper:
Context.write(key,value);


Driver:
job.setInputFormatClass(SequenceFileInputFormat.class);

import java.io.IOException;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapreduce.*;
import org.apache.hadoop.mapreduce.lib.input.*;
import org.apache.hadoop.mapreduce.lib.output.*;

public class wc

{
   public static class Map extends Mapper<Text, Text, Text, Text>
   {
       public void map(Text key, Text value, Context context) throws IOException, InterruptedException
       {
           
               context.write(key,value);
       }
   }

   public static void main(String[] args) throws Exception
   {
       Configuration conf = new Configuration();
       Job job = new Job(conf, "ww");
       job.setJarByClass(wc.class);
       job.setOutputKeyClass(Text.class);
       job.setOutputValueClass(Text.class);
       job.setMapperClass(Map.class);
       //job.setReducerClass(Reduce.class);
       job.setNumReduceTasks(0);
       job.setInputFormatClass(SequenceFileInputFormat.class);
       job.setOutputFormatClass(TextOutputFormat.class);
       FileInputFormat.addInputPath(job, new Path(args[0]));
       FileOutputFormat.setOutputPath(job, new Path(args[1]));
       job.waitForCompletion(true);
   }
}
